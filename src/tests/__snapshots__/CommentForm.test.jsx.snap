// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CommentForm /> should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <aside
          className="comment-form-directions"
>
          <h4
                    className="comment-form-header"
          >
                    Add a comment:
          </h4>
          <p
                    className="directions-text"
          >
                    Please be kind and specific, and provide links to any references resources. 
          </p>
</aside>,
        <form
          className="comment-form"
>
          <label
                    htmlFor="get-comment"
          >
                    <textarea
                              id="get-comment"
                              name="comment"
                              onChange={[Function]}
                              type="text"
                              value=""
                    />
          </label>
          <button
                    className="submit-comment"
                    name="submit"
                    onClick={[Function]}
                    type="submit"
          >
                    Submit
          </button>
</form>,
      ],
      "className": "comment-form-containter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4
              className="comment-form-header"
>
              Add a comment:
</h4>,
            <p
              className="directions-text"
>
              Please be kind and specific, and provide links to any references resources. 
</p>,
          ],
          "className": "comment-form-directions",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add a comment:",
              "className": "comment-form-header",
            },
            "ref": null,
            "rendered": "Add a comment:",
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Please be kind and specific, and provide links to any references resources. ",
              "className": "directions-text",
            },
            "ref": null,
            "rendered": "Please be kind and specific, and provide links to any references resources. ",
            "type": "p",
          },
        ],
        "type": "aside",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="get-comment"
>
              <textarea
                            id="get-comment"
                            name="comment"
                            onChange={[Function]}
                            type="text"
                            value=""
              />
</label>,
            <button
              className="submit-comment"
              name="submit"
              onClick={[Function]}
              type="submit"
>
              Submit
</button>,
          ],
          "className": "comment-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <textarea
                id="get-comment"
                name="comment"
                onChange={[Function]}
                type="text"
                value=""
/>,
              "htmlFor": "get-comment",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "get-comment",
                "name": "comment",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "submit-comment",
              "name": "submit",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <aside
            className="comment-form-directions"
>
            <h4
                        className="comment-form-header"
            >
                        Add a comment:
            </h4>
            <p
                        className="directions-text"
            >
                        Please be kind and specific, and provide links to any references resources. 
            </p>
</aside>,
          <form
            className="comment-form"
>
            <label
                        htmlFor="get-comment"
            >
                        <textarea
                                    id="get-comment"
                                    name="comment"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                        />
            </label>
            <button
                        className="submit-comment"
                        name="submit"
                        onClick={[Function]}
                        type="submit"
            >
                        Submit
            </button>
</form>,
        ],
        "className": "comment-form-containter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h4
                className="comment-form-header"
>
                Add a comment:
</h4>,
              <p
                className="directions-text"
>
                Please be kind and specific, and provide links to any references resources. 
</p>,
            ],
            "className": "comment-form-directions",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add a comment:",
                "className": "comment-form-header",
              },
              "ref": null,
              "rendered": "Add a comment:",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Please be kind and specific, and provide links to any references resources. ",
                "className": "directions-text",
              },
              "ref": null,
              "rendered": "Please be kind and specific, and provide links to any references resources. ",
              "type": "p",
            },
          ],
          "type": "aside",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="get-comment"
>
                <textarea
                                id="get-comment"
                                name="comment"
                                onChange={[Function]}
                                type="text"
                                value=""
                />
</label>,
              <button
                className="submit-comment"
                name="submit"
                onClick={[Function]}
                type="submit"
>
                Submit
</button>,
            ],
            "className": "comment-form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <textarea
                  id="get-comment"
                  name="comment"
                  onChange={[Function]}
                  type="text"
                  value=""
/>,
                "htmlFor": "get-comment",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "id": "get-comment",
                  "name": "comment",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "submit-comment",
                "name": "submit",
                "onClick": [Function],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
